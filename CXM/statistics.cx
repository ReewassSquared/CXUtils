package cxm

func mean (in []f32) (out f32) {
	var sum f32
	sum = 0.0
	for i := 0; i < len(in); i++ {
		sum = f32.add(sum, in[i])
	}
	out = f32.div(sum, i32.f32(len(in)))
}

func std (in []f32) (out f32) {
	var m f32
	m = mean(in)
	out = 0.0
	for i := 0; i < len(in); i++ {
		out = f32.add(out, f32.mul(f32.sub(in[i], m), f32.sub(in[i], m)))
	}
	out = f32.div(out, f32.sub(i32.f32(len(in)), 1.0))
	out = f32.sqrt(out)
}